# Generated by Django 3.2.13 on 2022-05-20 04:54

import arkid.core.token
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='App',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, unique=True, verbose_name='ID')),
                ('is_del', models.BooleanField(default=False, verbose_name='是否删除')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否可用')),
                ('updated', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
                ('created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('name', models.CharField(max_length=128, verbose_name='name')),
                ('url', models.CharField(blank=True, max_length=1024, verbose_name='url')),
                ('logo', models.CharField(blank=True, default='', max_length=1024, null=True, verbose_name='logo')),
                ('description', models.TextField(blank=True, null=True, verbose_name='description')),
                ('type', models.CharField(default='', max_length=128, verbose_name='type')),
                ('secret', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='secret')),
                ('package', models.CharField(blank=True, default='', max_length=128, null=True, verbose_name='package')),
            ],
            options={
                'verbose_name': 'APP',
                'verbose_name_plural': 'APP',
            },
        ),
        migrations.CreateModel(
            name='AppGroup',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, unique=True, verbose_name='ID')),
                ('is_del', models.BooleanField(default=False, verbose_name='是否删除')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否可用')),
                ('updated', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
                ('created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('name', models.CharField(max_length=128)),
            ],
            options={
                'verbose_name': 'APP Group',
                'verbose_name_plural': 'APP Group',
            },
        ),
        migrations.CreateModel(
            name='ApproveAction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, unique=True, verbose_name='ID')),
                ('is_del', models.BooleanField(default=False, verbose_name='是否删除')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否可用')),
                ('updated', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
                ('created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('path', models.CharField(max_length=100, verbose_name='Request Path')),
                ('method', models.CharField(max_length=50, verbose_name='Request Method')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
            ],
            options={
                'verbose_name': 'Approve Action',
                'verbose_name_plural': 'Approve Action',
            },
        ),
        migrations.CreateModel(
            name='EmptyModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='SystemPermission',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, unique=True, verbose_name='ID')),
                ('is_del', models.BooleanField(default=False, verbose_name='是否删除')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否可用')),
                ('updated', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
                ('created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('code', models.CharField(max_length=100, verbose_name='Code')),
                ('category', models.CharField(choices=[('entry', 'entry'), ('api', 'API'), ('data', 'data'), ('group', 'group'), ('ui', 'UI'), ('other', 'other')], default='other', max_length=100, verbose_name='category')),
                ('is_system', models.BooleanField(default=True, verbose_name='System Permission')),
                ('operation_id', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='Operation ID')),
                ('describe', models.JSONField(blank=True, default=dict, verbose_name='describe')),
                ('is_update', models.BooleanField(default=False, verbose_name='是否更新')),
                ('sort_id', models.IntegerField(default=-1, verbose_name='Sort ID')),
                ('container', models.ManyToManyField(blank=True, related_name='system_permission_set', related_query_name='system_permission', to='core.SystemPermission', verbose_name='SystemPermission List')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='children', to='core.systempermission', verbose_name='Parent')),
            ],
            options={
                'verbose_name': 'SystemPermission',
                'verbose_name_plural': 'SystemPermission',
            },
        ),
        migrations.CreateModel(
            name='Tenant',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, unique=True, verbose_name='ID')),
                ('is_del', models.BooleanField(default=False, verbose_name='是否删除')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否可用')),
                ('updated', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
                ('created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('name', models.CharField(max_length=128, verbose_name='name')),
                ('slug', models.SlugField(blank=True, default='', null=True, unique=True, verbose_name='slug')),
                ('icon', models.URLField(blank=True, verbose_name='icon')),
                ('token_duration_minutes', models.IntegerField(default=1440, verbose_name='Token Duration Minutes')),
            ],
            options={
                'verbose_name': 'tenant',
                'verbose_name_plural': 'tenant',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, unique=True, verbose_name='ID')),
                ('is_del', models.BooleanField(default=False, verbose_name='是否删除')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否可用')),
                ('updated', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
                ('created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('username', models.CharField(max_length=128)),
                ('avatar', models.URLField(blank=True, verbose_name='Avatar')),
                ('is_platform_user', models.BooleanField(default=False, verbose_name='is platform user')),
                ('scim_external_id', models.CharField(blank=True, max_length=128, null=True)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.tenant')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'user',
            },
        ),
        migrations.CreateModel(
            name='ExpiringToken',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='auth_token', serialize=False, to='core.user', verbose_name='User')),
                ('token', models.CharField(db_index=True, default=arkid.core.token.generate_token, max_length=40, unique=True, verbose_name='Token')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
            ],
            options={
                'verbose_name': 'Token',
                'verbose_name_plural': 'Token',
            },
        ),
        migrations.CreateModel(
            name='UserPermissionResult',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, unique=True, verbose_name='ID')),
                ('is_del', models.BooleanField(default=False, verbose_name='是否删除')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否可用')),
                ('updated', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
                ('created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('result', models.CharField(blank=True, max_length=1024, null=True, verbose_name='权限结果')),
                ('app', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, to='core.app', verbose_name='App')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.tenant', verbose_name='租户')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.user', verbose_name='用户')),
            ],
            options={
                'verbose_name': 'UserPermissionResult',
                'verbose_name_plural': 'UserPermissionResult',
            },
        ),
        migrations.CreateModel(
            name='UserGroup',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, unique=True, verbose_name='ID')),
                ('is_del', models.BooleanField(default=False, verbose_name='是否删除')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否可用')),
                ('updated', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
                ('created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('name', models.CharField(max_length=128)),
                ('scim_external_id', models.CharField(blank=True, max_length=128, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='children', to='core.usergroup')),
                ('permission', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, to='core.systempermission')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.tenant')),
                ('users', models.ManyToManyField(blank=True, related_name='user_set', related_query_name='user', to='core.User', verbose_name='User List')),
            ],
            options={
                'verbose_name': 'User Group',
                'verbose_name_plural': 'User Group',
            },
        ),
        migrations.AddField(
            model_name='tenant',
            name='users',
            field=models.ManyToManyField(blank=True, related_name='tenant_user_set', related_query_name='user', to='core.User'),
        ),
        migrations.AddField(
            model_name='systempermission',
            name='tenant',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, to='core.tenant', verbose_name='Tenant'),
        ),
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, unique=True, verbose_name='ID')),
                ('is_del', models.BooleanField(default=False, verbose_name='是否删除')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否可用')),
                ('updated', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
                ('created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('code', models.CharField(max_length=100, verbose_name='Code')),
                ('category', models.CharField(choices=[('entry', 'entry'), ('api', 'API'), ('data', 'data'), ('group', 'group'), ('ui', 'UI'), ('other', 'other')], default='other', max_length=100, verbose_name='category')),
                ('is_system', models.BooleanField(default=True, verbose_name='System Permission')),
                ('operation_id', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='Operation ID')),
                ('describe', models.JSONField(blank=True, default=dict, verbose_name='describe')),
                ('is_update', models.BooleanField(default=False, verbose_name='是否更新')),
                ('sort_id', models.IntegerField(default=-1, verbose_name='Sort ID')),
                ('app', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, to='core.app', verbose_name='APP')),
                ('container', models.ManyToManyField(blank=True, related_name='permission_set', related_query_name='permission', to='core.Permission', verbose_name='Permission List')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='children', to='core.permission', verbose_name='Parent')),
                ('tenant', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, to='core.tenant', verbose_name='Tenant')),
            ],
            options={
                'verbose_name': 'Permission',
                'verbose_name_plural': 'Permission',
            },
        ),
        migrations.CreateModel(
            name='ApproveRequest',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, unique=True, verbose_name='ID')),
                ('is_del', models.BooleanField(default=False, verbose_name='是否删除')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否可用')),
                ('updated', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
                ('created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('environ', models.JSONField(verbose_name='Request Environ')),
                ('body', models.BinaryField(verbose_name='Request Body')),
                ('status', models.CharField(choices=[('wait', 'Wait'), ('pass', 'Pass'), ('deny', 'Deny')], default='wait', max_length=100, verbose_name='Status')),
                ('action', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='approve_request_set', related_query_name='requests', to='core.approveaction', verbose_name='Request Action')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='approve_request_set', related_query_name='requests', to='core.user', verbose_name='User')),
            ],
            options={
                'verbose_name': 'Approve Request',
                'verbose_name_plural': 'Approve Request',
            },
        ),
    ]
